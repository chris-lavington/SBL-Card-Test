// Google font import
@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap');

/**
 * Variables
 */

 $bp-small: 48em; // 768px
 $bp-medium: 64em; // 1024px
 $bp-large: 85.375em; // 1366px
 $bp-xlarge: 120em; // 1920px
 $bp-xxlarge: 160em; // 2560px
 
 // Media Queries
 $mq-small: "(min-width: #{$bp-small})";
 $mq-medium: "(min-width: #{$bp-medium})";
 $mq-large: "(min-width: #{$bp-large})";
 $mq-xlarge: "(min-width: #{$bp-xlarge})";
 $mq-xxlarge: "(min-width: #{$bp-xxlarge})";
 $mq-retina: "(-webkit-min-device-pixel-ratio: 2),(min-resolution: 192dpi)";
 
 // Font-Size
 $base-font-size: 1em;
 
 // Line-Height
 $base-line-height: 1.5;
 $header-line-height: 1.25;
 
 // Spacing
 $base-spacing: $base-font-size;
 
 // Colours
 $base-font-color: #fbfbfb;
 $border-color: #464c5f;
 
 // Transition Settings
 $base-transition-duration: .3s;
 $base-transition-timing: ease-in-out;
 
 // Backgrounds
 $base-background-color: #2b2f3c;
 
 
 /**
  * Base Styles
  */
 *,
 *:before,
 *:after {
   box-sizing: border-box;
 }
 
 body {
    background-color: $base-background-color;
    color: $base-font-color;
    font-family: 'Roboto Condensed', Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-weight: 400;
    font-size: $base-font-size;
    line-height: $base-line-height;

   @media #{$mq-medium} {
     font-size: $base-font-size*1.1;
     line-height: $base-line-height*1.1;
   }
 
   @media #{$mq-large} {
     font-size: $base-font-size*1.2;
   }
 
   @media #{$mq-xlarge} {
     font-size: $base-font-size*1.3;
   }
 
   @media #{$mq-xxlarge} {
     font-size: $base-font-size*1.4;
   }
 }
 
 a {
   color: $base-font-color;
   transition: color $base-transition-duration $base-transition-timing;
   text-decoration: none;
 
   &:hover,
   &:focus {
     color: darken($base-font-color, 10%);
   }
 }
 
 img {
   max-width: 100%;
 }
 
 ul {
   padding: 0;
   list-style: none;
 }
 
 .icon {
    display: inline-block;
    fill: currentColor;
 }
 
 
 /**
  * Global
  */
 
 .sbl-cards-container {
   margin: 0 4% 4% 4%;
 
   @media #{$mq-medium} {
     margin: 0 8% 8% 8%;
   }
 
   @media #{$mq-large} {
     margin: 0 12% 12% 12%;
   }
 
   @media #{$mq-xlarge} {
     margin: 0 18% 18% 18%;
   }
 }
 
 
 /**
  * Typography
  */
 p {
   margin: 0 0 $base-spacing;
 }
 
 @function headings($from:1, $to:6) {
     @if $from == $to {
         @return 'h#{$from}';
     } @else {
         @return 'h#{$from},' + headings($from+1, $to);
     }
 }
 
 #{headings(1,6)} {
   text-transform: uppercase;
     line-height: $header-line-height;
 }

 /**
  * Mixins
  */

 /// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin cardShadow($depth) {
    @if $depth < 1 {
      box-shadow: none;
    } @else if $depth > 5 {
      @warn "Invalid $depth `#{$depth}` for mixin `card`.";
    } @else {
      box-shadow: bottom-shadow($depth), top-shadow($depth);  
    }
  }

  /// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
    $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
    $blur: nth(1.5 3 10 14 19, $depth) * 4px;
    $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));
  
    @return 0 $primary-offset $blur $color;
  }
  
  /// Computes a bottom-shadow for a card effect.
  /// @param {Number} $depth - depth level
  /// @return {List}
  @function bottom-shadow($depth) {
    $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
    $blur: nth(1 3 3 5 6, $depth) * 4px;
    $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));
  
    @return 0 $primary-offset $blur $color;
  }